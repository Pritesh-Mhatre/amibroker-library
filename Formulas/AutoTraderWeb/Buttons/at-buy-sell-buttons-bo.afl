/**
* AmiBroker BUY/SELL buttons Bracket Order example. 
* You need to set appropriate values in chart parameters.
* 
* Button Article: https://stocksdeveloper.in/amibroker-multi-account-button-trading/
* User Guide: https://stocksdeveloper.in/documentation/index/
* API Docs: https://stocksdeveloper.in/documentation/api/
* Symbol Search: https://web.stocksdeveloper.in/instrument
* 
* Author - Stocks Developer
*/

#include <autotrader-button.afl>
#include <autotrader.afl>

_SECTION_BEGIN("Bracket Order");

TARGET = Param("Target (absolute)", 1, 1, 1000, 1);
STOPLOSS = Param("Stoploss (absolute)", 1, 1, 1000, 1);
TRAILING_STOPLOSS = Param("Trailing Stoploss (absolute)", 0, 0, 100, 1);
BUFFER = Param("Make BO behave like a market order", 0, 0, 100, 1);

_SECTION_END();

// Following code adds buttons to the screen
Column_Begin( "1" );
	BuyCommand = TriggerCell( "BUY", colorBrightGreen, colorAqua, colorBlack);
Column_End( );

Column_Begin( "2" );
	SellCommand = TriggerCell( "SELL", colorRed, colorLightOrange, colorBlack);
Column_End( );

Column_Begin( "3" );
	SellCommand = TriggerCell( "Square Off", colorYellow, colorGold, colorBlack);
Column_End( );

// Get co-ordinates
ClickCoordinates = Nz(StaticVarGet("ClickCoordinates"));

// Take action based on the button placed by user
switch( ClickCoordinates )
{
    case 101:
		// Place buy orders when user clicks on BUY button
		livePrice = LastValue(C);
		orderPrice = livePrice + BUFFER;
		
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "Placing a BUY limit bracket order, with price = " 
				+ orderPrice + ", target = " + TARGET
				+ ", stoploss = " + STOPLOSS
				+ "trailing stoploss = " + TRAILING_STOPLOSS;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here
			placeBracketOrder(acc, 
				AT_EXCHANGE, AT_SYMBOL, "BUY", 
				"LIMIT", AT_QUANTITY, orderPrice, defaultTriggerPrice(), 
				TARGET, STOPLOSS, TRAILING_STOPLOSS, False);	
		}		
		break;

    case 201:
		// Place sell orders when user clicks on SELL button
		livePrice = LastValue(C);
		orderPrice = livePrice - BUFFER;
		
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "Placing a SELL limit bracket order, with price = " 
				+ orderPrice + ", target = " + TARGET
				+ ", stoploss = " + STOPLOSS
				+ "trailing stoploss = " + TRAILING_STOPLOSS;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here
			placeBracketOrder(acc, 
				AT_EXCHANGE, AT_SYMBOL, "SELL", 
				"LIMIT", AT_QUANTITY, orderPrice, defaultTriggerPrice(), 
				TARGET, STOPLOSS, TRAILING_STOPLOSS, False);	
		}		
		break;
	
    case 301:
		// Place a square off request when user clicks on Square Off button
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "Sending square-off position request sent for account [" + (iter + 1) + "] : " + acc 
				+ ", Position : " + AT_SYMBOL;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here
			positionType = calcPositionType(AT_VARIETY_REGULAR, AT_PRODUCT_TYPE);
			squareOffPosition(acc, "NET", positionType, AT_EXCHANGE, AT_SYMBOL);
		}		
		break;
}