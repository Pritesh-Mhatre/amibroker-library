/**
* AmiBroker BUY/SELL buttons Regular Order example. 
* You need to set appropriate values in chart parameters.
* 
* Button Article: https://stocksdeveloper.in/amibroker-multi-account-button-trading/
* User Guide: https://stocksdeveloper.in/documentation/index/
* API Docs: https://stocksdeveloper.in/documentation/api/
* Symbol Search: https://web.stocksdeveloper.in/instrument
* 
* Author - Stocks Developer
*/

#include <autotrader-button.afl>
#include <autotrader.afl>

_SECTION_BEGIN("Two Legs Strategy");

LEG_ONE_SYMBOL = ParamStr("Leg One Symbol", Name());
LEG_TWO_SYMBOL = ParamStr("Leg Two Symbol", Name());

_SECTION_END();


// Following code adds buttons to the screen
Column_Begin( "1" );
	BuyCommand = TriggerCell( "BUY", colorBrightGreen, colorAqua, colorBlack);
Column_End( );

Column_Begin( "2" );
	SellCommand = TriggerCell( "SELL", colorRed, colorLightOrange, colorBlack);
Column_End( );

Column_Begin( "3" );
	SellCommand = TriggerCell( "Square Off", colorYellow, colorGold, colorBlack);
Column_End( );

// Get co-ordinates
ClickCoordinates = Nz(StaticVarGet("ClickCoordinates"));

// Take action based on the button placed by user
switch( ClickCoordinates )
{
    case 101:
		// Place buy orders when user clicks on BUY button
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "[LEG 1] Placing BUY order for account [" + (iter + 1) + "] : " + acc;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here		
			placeOrder(acc, AT_EXCHANGE, LEG_ONE_SYMBOL, "BUY", "MARKET", 
				AT_PRODUCT_TYPE, AT_QUANTITY, 0, defaultTriggerPrice(), False);

			message = "[LEG 2] Placing BUY order for account [" + (iter + 1) + "] : " + acc;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here		
			placeOrder(acc, AT_EXCHANGE, LEG_TWO_SYMBOL, "BUY", "MARKET", 
				AT_PRODUCT_TYPE, AT_QUANTITY, 0, defaultTriggerPrice(), False);
		}		
		break;
	
    case 201:
		// Place sell orders when user clicks on SELL button
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "[LEG 1] Placing SELL order for account [" + (iter + 1) + "] : " + acc;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here		
			placeOrder(acc, AT_EXCHANGE, LEG_ONE_SYMBOL, "SELL", "MARKET", 
				AT_PRODUCT_TYPE, AT_QUANTITY, 0, defaultTriggerPrice(), False);

			message = "[LEG 2] Placing SELL order for account [" + (iter + 1) + "] : " + acc;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here		
			placeOrder(acc, AT_EXCHANGE, LEG_TWO_SYMBOL, "SELL", "MARKET", 
				AT_PRODUCT_TYPE, AT_QUANTITY, 0, defaultTriggerPrice(), False);
		}		
		break;
	
    case 301:
		// Place a square off request when user clicks on Square Off button
		for(iter = 0; !strIsEmpty(acc = StrExtract(AT_ACCOUNTS, iter)); iter++ ) {
			message = "[LEG 1] Sending square-off position request sent for account [" + (iter + 1) + "] : " + acc 
				+ ", Position : " + LEG_ONE_SYMBOL;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here
			positionType = calcPositionType(AT_VARIETY_REGULAR, AT_PRODUCT_TYPE);
			squareOffPosition(acc, "NET", positionType, AT_EXCHANGE, LEG_ONE_SYMBOL);

			message = "[LEG 2] Sending square-off position request sent for account [" + (iter + 1) + "] : " + acc 
				+ ", Position : " + LEG_TWO_SYMBOL;
			logDebug(message);
			_TRACE(message);
			
			// You can write any of AutoTrader Web API functions here
			positionType = calcPositionType(AT_VARIETY_REGULAR, AT_PRODUCT_TYPE);
			squareOffPosition(acc, "NET", positionType, AT_EXCHANGE, LEG_TWO_SYMBOL);
		}		
		break;
	
}