/**
* AmiBroker supertrend with square-off option. 
* You need to set appropriate values in chart parameters.
* 
* User Guide: https://stocksdeveloper.in/documentation/index/
* API Docs: https://stocksdeveloper.in/documentation/api/
* Symbol Search: https://stocksdeveloper.in:9013/instrument
* 
* Author - Stocks Developer
*/

/******************************************************************** 
* SECTION 1 - BEGIN
* This section contains all includes & should be at the top of your strategy afl.
********************************************************************/

#include <autotrader.afl>
#include <autotrader-square-off.afl>
#include <autotrader-next-bar.afl>

/******************************************************************** 
* SECTION 1 - END
********************************************************************/

/*******************************************************************
* SuperTrend indicator based automated trading afl example.
* 
* There are many configurations available, please see chart parameters:
* - Automated time based square-off
* - Ability to place order on next bar or candle
*
* NOTE: It is recommended to start with a blank chart.
********************************************************************/

/*******************************************************************
* How to see strategy logs in AMIBroker?
* 1. Enable log window from amibroker menu (Window -> Log)
* 2. You will see log window at the bottom.
* 3. Go to "Trace" tab (all strategy logs are printed here).
********************************************************************/


/******************************************************************** 
* SECTION 2 - BEGIN
* This section contains your strategy afl code.
********************************************************************/

_SECTION_BEGIN("Supertrend");         

// SuperTrend parameters
Multiplier = Param("Period", 7, 1, 50 );
Period = Param("Multiplier", 3, 1, 10 );

// Chart parameters
UpColor = ParamColor("Up Color", colorGreen);
DownColor = ParamColor("Down Color", colorRed);
WickUpColor = ParamColor("Wick UP Color", colorLime);
WickDownColor = ParamColor("Wick Down Color", colorOrange);
ResistanceColor = ParamColor("Resistance", colorRed);
SupportColor = ParamColor( "Support", colorGreen);
Style = ParamStyle("Line Style", styleThick);

// Refresh even when minimized, see below link
// https://forum.amibroker.com/t/program-pauses-when-amibroker-minimized/4145/2
RefreshPeriod = Param( "Timed Refresh Period", 5, 1, 300);
RequestTimedRefresh(RefreshPeriod, False);
   
SetChartOptions(0, chartShowArrows|chartShowDates);        
       
SetBarFillColor(IIf(C>O, UpColor, IIf(C<=O, DownColor, colorLightGrey)));        

Plot(C, "Price", IIf(C>O, WickUpColor, IIf(C<=O, WickDownColor, colorLightGrey)), styleCandle | styleNoTitle);

_N(Title = "Supertrend: " + 
	StrFormat("{{INTERVAL}} {{DATE}} \nOpen= %g, HiGH= %g, LoW= %g, Close= %g (%.1f%%) {{VALUES}}", 
		O, H, L, C, SelectedValue( ROC( C, 1 ) ) ));         
        
function calculateSupertrend(Period, Multiplier)
{
	ATR_Val=ATR(Period);

	UpperBand=LowerBand=final_UpperBand=final_LowerBand=SuperTrend=0;
	
	for( i = Period; i < BarCount; i++ )
	{
		UpperBand[i]=((High[i] + Low[i])/2) + Multiplier*ATR_Val[i];
		LowerBand[i]=((High[i] + Low[i])/2) - Multiplier*ATR_Val[i];
		final_UpperBand[i] = IIf( ((UpperBand[i]<final_UpperBand[i-1]) OR (Close[i-1]>final_UpperBand[i-1])), (UpperBand[i]), final_UpperBand[i-1]);
		final_LowerBand[i] = Iif( ((LowerBand[i]>final_LowerBand[i-1]) OR (Close[i-1]<final_LowerBand[i-1])), (LowerBand[i]), final_LowerBand[i-1]);
			
		SuperTrend[i] = IIf(((SuperTrend[i-1]==final_UpperBand[i-1]) AND (Close[i]<=final_UpperBand[i])),final_UpperBand[i],
		IIf(((SuperTrend[i-1]==final_UpperBand[i-1]) AND (Close[i]>=final_UpperBand[i])),final_LowerBand[i],
		IIf(((SuperTrend[i-1]==final_LowerBand[i-1]) AND (Close[i]>=final_LowerBand[i])),final_LowerBand[i],
		IIf(((SuperTrend[i-1]==final_LowerBand[i-1]) AND (Close[i]<=final_LowerBand[i])),final_UpperBand[i],0))));

	}
	
	Plot( SuperTrend, "SuperTrend", IIf( SuperTrend>Close, ResistanceColor, SupportColor), Style);
	Return SuperTrend;  
}

SuperTrend = calculateSupertrend(Period,Multiplier);

// This will tell us if the line is green or red (i.e. buy or sell)
// Close > Supertrend == BUY Signal otherwise SELL
SupertrendSignal = Close > SuperTrend;

// This will tell us whenever there is a change in signal
SignalChanged = SupertrendSignal != Ref(SupertrendSignal, -1);

// If supertrend is buy and signal just changed
Buy = SupertrendSignal AND SignalChanged;

// If supertrend is sell and signal just changed
Sell = (!SupertrendSignal) AND SignalChanged;

// Additional safety, remove excessive signals
Buy=ExRem(Buy,Sell);
Sell=ExRem(Sell,Buy);

// This is only added for backtesting
Short=Sell;
Cover=Buy;

/******************************************************************** 
* SECTION 2 - END
********************************************************************/

/******************************************************************** 
* SECTION 3 - BEGIN
* This section contains your code for placing orders.
********************************************************************/
/*
* shouldSquareOff() returns 1 when current time goes beyond square off time.
*/
if(shouldSquareOff()) {
	if(!isSquareOffRequestSent()) {
		// Square off position, as current time has gone passed square off time
		// Assuming the position is MIS
		squareOffPosition(AT_ACCOUNT, "DAY", "MIS", AT_EXCHANGE, AT_SYMBOL);
		
		saveStaticVariable(AT_ACCOUNT, AT_SQUARE_OFF_STATUS_KEY, 1);
	}
}
else {

	BuySignal = Buy;
	SellSignal = Sell;

	if(AT_PLACE_ORDER_ON_NEXT_BAR) {
		// Use signals from previous bar (when place order on next bar is turned on)
		BuySignal = Ref(Buy, -1);
		SellSignal = Ref(Sell, -1);		
	}

	/* 
	* If control reaches here, it means we are before square off time,
	* so we can place orders.
	*/
	if ( LastValue(BuySignal) == True && isNewBar() )
	{
		/* 
		* We do some calculation to double the quantity, for all orders except first.
		* This is done so that we can re-enter a position. Following this approach
		* we can avoid using Short & Cover.
		*/
		quantity = calcDoubleQuantity(AT_ACCOUNT, AT_SYMBOL, AT_QUANTITY);

		placeOrder(AT_ACCOUNT, AT_EXCHANGE, AT_SYMBOL, "BUY", "MARKET", 
			AT_PRODUCT_TYPE, quantity, buyPrice, defaultTriggerPrice(), True);
	}

	if ( LastValue(SellSignal) == True && isNewBar() )
	{	
		/* 
		* We do some calculation to double the quantity, for all orders except first.
		* This is done so that we can re-enter a position. Following this approach
		* we can avoid using Short & Cover.
		*/
		quantity = calcDoubleQuantity(AT_ACCOUNT, AT_SYMBOL, AT_QUANTITY);
		
		placeOrder(AT_ACCOUNT, AT_EXCHANGE, AT_SYMBOL, "SELL", "MARKET", 
			AT_PRODUCT_TYPE, quantity, sellPrice, defaultTriggerPrice(), True);
	}
	
	if(AT_PLACE_ORDER_ON_NEXT_BAR) {
		// Special handling when place order on next bar or candle is ON
		// This must be done after place order code
		
		if(LastValue(Buy) == True || LastValue(Sell) == True ||
			LastValue(Short) == True || LastValue(Cover) == True) {
			// Save time of current bar when we get signal
			saveStaticVariable(AT_ACCOUNT, AT_PREVIOUS_BAR_END_TIME, Status( "lastbarend" ));
		}
	}
	
}
/******************************************************************** 
* SECTION 3 - END
********************************************************************/

_SECTION_END();